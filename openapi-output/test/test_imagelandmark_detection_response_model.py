# coding: utf-8

"""
    Eden AI

    Your project description

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.imagelandmark_detection_response_model import ImagelandmarkDetectionResponseModel

class TestImagelandmarkDetectionResponseModel(unittest.TestCase):
    """ImagelandmarkDetectionResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImagelandmarkDetectionResponseModel:
        """Test ImagelandmarkDetectionResponseModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImagelandmarkDetectionResponseModel`
        """
        model = ImagelandmarkDetectionResponseModel()
        if include_optional:
            return ImagelandmarkDetectionResponseModel(
                microsoft = openapi_client.models.imagelandmark_detection_landmark_detection_data_class.imagelandmark_detectionLandmarkDetectionDataClass(
                    items = [
                        openapi_client.models.landmark_item.LandmarkItem(
                            description = '', 
                            confidence = 56, 
                            bounding_box = [
                                openapi_client.models.landmark_vertice.LandmarkVertice(
                                    x = 56, 
                                    y = 56, )
                                ], 
                            locations = [
                                openapi_client.models.landmark_location.LandmarkLocation(
                                    lat_lng = openapi_client.models.landmark_lat_lng.LandmarkLatLng(
                                        latitude = 56, 
                                        longitude = 56, ), )
                                ], )
                        ], 
                    original_response = null, 
                    status = null, ),
                google = openapi_client.models.imagelandmark_detection_landmark_detection_data_class.imagelandmark_detectionLandmarkDetectionDataClass(
                    items = [
                        openapi_client.models.landmark_item.LandmarkItem(
                            description = '', 
                            confidence = 56, 
                            bounding_box = [
                                openapi_client.models.landmark_vertice.LandmarkVertice(
                                    x = 56, 
                                    y = 56, )
                                ], 
                            locations = [
                                openapi_client.models.landmark_location.LandmarkLocation(
                                    lat_lng = openapi_client.models.landmark_lat_lng.LandmarkLatLng(
                                        latitude = 56, 
                                        longitude = 56, ), )
                                ], )
                        ], 
                    original_response = null, 
                    status = null, )
            )
        else:
            return ImagelandmarkDetectionResponseModel(
        )
        """

    def testImagelandmarkDetectionResponseModel(self):
        """Test ImagelandmarkDetectionResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
