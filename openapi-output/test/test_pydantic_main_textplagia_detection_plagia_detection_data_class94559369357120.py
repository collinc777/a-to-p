# coding: utf-8

"""
    Eden AI

    Your project description

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pydantic_main_textplagia_detection_plagia_detection_data_class94559369357120 import PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120

class TestPydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120(unittest.TestCase):
    """PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120:
        """Test PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120`
        """
        model = PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120()
        if include_optional:
            return PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120(
                plagia_score = 56,
                items = [
                    openapi_client.models.plagia_detection_item.PlagiaDetectionItem(
                        text = '', 
                        candidates = [
                            openapi_client.models.plagia_detection_candidate.PlagiaDetectionCandidate(
                                url = '', 
                                plagia_score = 56, 
                                prediction = '', 
                                plagiarized_text = '', )
                            ], )
                    ],
                original_response = None,
                status = 'success'
            )
        else:
            return PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120(
                plagia_score = 56,
                status = 'success',
        )
        """

    def testPydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120(self):
        """Test PydanticMainTextplagiaDetectionPlagiaDetectionDataClass94559369357120"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
