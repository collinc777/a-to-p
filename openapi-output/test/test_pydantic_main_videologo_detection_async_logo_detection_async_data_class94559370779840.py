# coding: utf-8

"""
    Eden AI

    Your project description

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pydantic_main_videologo_detection_async_logo_detection_async_data_class94559370779840 import PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840

class TestPydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840(unittest.TestCase):
    """PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840:
        """Test PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840`
        """
        model = PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840()
        if include_optional:
            return PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840(
                logos = [
                    openapi_client.models.logo_track.LogoTrack(
                        description = '', 
                        tracking = [
                            openapi_client.models.video_logo.VideoLogo(
                                timestamp = 56, 
                                bounding_box = openapi_client.models.video_logo_bounding_box.VideoLogoBoundingBox(
                                    top = 56, 
                                    left = 56, 
                                    height = 56, 
                                    width = 56, ), 
                                confidence = 56, )
                            ], )
                    ],
                original_response = None,
                id = '',
                final_status = 'success',
                error = openapi_client.models.error.Error()
            )
        else:
            return PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840(
                id = '',
                final_status = 'success',
        )
        """

    def testPydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840(self):
        """Test PydanticMainVideologoDetectionAsyncLogoDetectionAsyncDataClass94559370779840"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
