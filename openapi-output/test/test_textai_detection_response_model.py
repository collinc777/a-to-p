# coding: utf-8

"""
    Eden AI

    Your project description

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.textai_detection_response_model import TextaiDetectionResponseModel

class TestTextaiDetectionResponseModel(unittest.TestCase):
    """TextaiDetectionResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TextaiDetectionResponseModel:
        """Test TextaiDetectionResponseModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TextaiDetectionResponseModel`
        """
        model = TextaiDetectionResponseModel()
        if include_optional:
            return TextaiDetectionResponseModel(
                sapling = openapi_client.models.textai_detection_ai_detection_data_class.textai_detectionAiDetectionDataClass(
                    ai_score = 56, 
                    items = [
                        openapi_client.models.ai_detection_item.AiDetectionItem(
                            text = '', 
                            prediction = '', 
                            ai_score = 56, 
                            ai_score_detail = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                originalityai = openapi_client.models.textai_detection_ai_detection_data_class.textai_detectionAiDetectionDataClass(
                    ai_score = 56, 
                    items = [
                        openapi_client.models.ai_detection_item.AiDetectionItem(
                            text = '', 
                            prediction = '', 
                            ai_score = 56, 
                            ai_score_detail = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                winstonai = openapi_client.models.textai_detection_ai_detection_data_class.textai_detectionAiDetectionDataClass(
                    ai_score = 56, 
                    items = [
                        openapi_client.models.ai_detection_item.AiDetectionItem(
                            text = '', 
                            prediction = '', 
                            ai_score = 56, 
                            ai_score_detail = 56, )
                        ], 
                    original_response = null, 
                    status = null, )
            )
        else:
            return TextaiDetectionResponseModel(
        )
        """

    def testTextaiDetectionResponseModel(self):
        """Test TextaiDetectionResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
