# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.ocrocr_tables_async_model import OcrocrTablesAsyncModel


class TestOcrocrTablesAsyncModel(unittest.TestCase):
    """OcrocrTablesAsyncModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OcrocrTablesAsyncModel:
        """Test OcrocrTablesAsyncModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `OcrocrTablesAsyncModel`
        """
        model = OcrocrTablesAsyncModel()
        if include_optional:
            return OcrocrTablesAsyncModel(
                amazon = openapi_client.models.ocrocr_tables_async_ocr_tables_async_data_class.ocrocr_tables_asyncOcrTablesAsyncDataClass(
                    pages = [
                        openapi_client.models.page.Page(
                            lines = [
                                openapi_client.models.line.Line(
                                    text = '', 
                                    words = [
                                        openapi_client.models.word.Word(
                                            text = '', 
                                            bounding_box = null, 
                                            confidence = 56, )
                                        ], 
                                    bounding_box = null, 
                                    confidence = 56, )
                                ], )
                        ], 
                    num_pages = 56, 
                    original_response = null, 
                    id = '', 
                    final_status = null, 
                    error = openapi_client.models.error.Error(), ),
                microsoft = openapi_client.models.ocrocr_tables_async_ocr_tables_async_data_class.ocrocr_tables_asyncOcrTablesAsyncDataClass(
                    pages = [
                        openapi_client.models.page.Page(
                            lines = [
                                openapi_client.models.line.Line(
                                    text = '', 
                                    words = [
                                        openapi_client.models.word.Word(
                                            text = '', 
                                            bounding_box = null, 
                                            confidence = 56, )
                                        ], 
                                    bounding_box = null, 
                                    confidence = 56, )
                                ], )
                        ], 
                    num_pages = 56, 
                    original_response = null, 
                    id = '', 
                    final_status = null, 
                    error = openapi_client.models.error.Error(), ),
                google = openapi_client.models.ocrocr_tables_async_ocr_tables_async_data_class.ocrocr_tables_asyncOcrTablesAsyncDataClass(
                    pages = [
                        openapi_client.models.page.Page(
                            lines = [
                                openapi_client.models.line.Line(
                                    text = '', 
                                    words = [
                                        openapi_client.models.word.Word(
                                            text = '', 
                                            bounding_box = null, 
                                            confidence = 56, )
                                        ], 
                                    bounding_box = null, 
                                    confidence = 56, )
                                ], )
                        ], 
                    num_pages = 56, 
                    original_response = null, 
                    id = '', 
                    final_status = null, 
                    error = openapi_client.models.error.Error(), )
            )
        else:
            return OcrocrTablesAsyncModel(
        )
        """

    def testOcrocrTablesAsyncModel(self):
        """Test OcrocrTablesAsyncModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
