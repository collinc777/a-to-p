# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.pydantic_main_ocrfinancial_parser_financial_parser_data_class94559368347232 import (
    PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232,
)


class TestPydanticMainOcrfinancialParserFinancialParserDataClass94559368347232(
    unittest.TestCase
):
    """PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232:
        """Test PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232`
        """
        model = PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232()
        if include_optional:
            return PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232(
                extracted_data = [
                    openapi_client.models.financial_parser_object_data_class.FinancialParserObjectDataClass(
                        customer_information = openapi_client.models.financial_customer_information.FinancialCustomerInformation(
                            name = '', 
                            id_reference = '', 
                            mailling_address = '', 
                            billing_address = '', 
                            shipping_address = '', 
                            service_address = '', 
                            remittance_address = '', 
                            email = '', 
                            phone = '', 
                            vat_number = '', 
                            abn_number = '', 
                            gst_number = '', 
                            pan_number = '', 
                            business_number = '', 
                            siret_number = '', 
                            siren_number = '', 
                            customer_number = '', 
                            coc_number = '', 
                            fiscal_number = '', 
                            registration_number = '', 
                            tax_id = '', 
                            website = '', 
                            remit_to_name = '', 
                            city = '', 
                            country = '', 
                            house_number = '', 
                            province = '', 
                            street_name = '', 
                            zip_code = '', 
                            municipality = '', ), 
                        merchant_information = openapi_client.models.financial_merchant_information.FinancialMerchantInformation(
                            name = '', 
                            address = '', 
                            phone = '', 
                            tax_id = '', 
                            id_reference = '', 
                            vat_number = '', 
                            abn_number = '', 
                            gst_number = '', 
                            business_number = '', 
                            siret_number = '', 
                            siren_number = '', 
                            pan_number = '', 
                            coc_number = '', 
                            fiscal_number = '', 
                            email = '', 
                            fax = '', 
                            website = '', 
                            registration = '', 
                            city = '', 
                            country = '', 
                            house_number = '', 
                            province = '', 
                            street_name = '', 
                            zip_code = '', 
                            country_code = '', ), 
                        payment_information = openapi_client.models.financial_payment_information.FinancialPaymentInformation(
                            amount_due = 56, 
                            amount_tip = 56, 
                            amount_shipping = 56, 
                            amount_change = 56, 
                            amount_paid = 56, 
                            total = 56, 
                            subtotal = 56, 
                            total_tax = 56, 
                            tax_rate = 56, 
                            discount = 56, 
                            gratuity = 56, 
                            service_charge = 56, 
                            previous_unpaid_balance = 56, 
                            prior_balance = 56, 
                            payment_terms = '', 
                            payment_method = '', 
                            payment_card_number = '', 
                            payment_auth_code = '', 
                            shipping_handling_charge = 56, 
                            transaction_number = '', 
                            transaction_reference = '', ), 
                        financial_document_information = openapi_client.models.financial_document_information.FinancialDocumentInformation(
                            invoice_receipt_id = '', 
                            purchase_order = '', 
                            invoice_date = '', 
                            time = '', 
                            invoice_due_date = '', 
                            service_start_date = '', 
                            service_end_date = '', 
                            reference = '', 
                            biller_code = '', 
                            order_date = '', 
                            tracking_number = '', 
                            barcodes = [
                                openapi_client.models.financial_barcode.FinancialBarcode(
                                    value = '', 
                                    type = '', )
                                ], ), 
                        local = openapi_client.models.financial_local_information.FinancialLocalInformation(
                            currency = '', 
                            currency_code = '', 
                            currency_exchange_rate = '', 
                            country = '', 
                            language = '', ), 
                        bank = openapi_client.models.financial_bank_information.FinancialBankInformation(
                            iban = '', 
                            swift = '', 
                            bsb = '', 
                            sort_code = '', 
                            account_number = '', 
                            routing_number = '', 
                            bic = '', ), 
                        item_lines = [
                            openapi_client.models.financial_line_item.FinancialLineItem(
                                tax = 56, 
                                amount_line = 56, 
                                description = '', 
                                quantity = 56, 
                                unit_price = 56, 
                                unit_type = '', 
                                date = '', 
                                product_code = '', 
                                purchase_order = '', 
                                tax_rate = 56, 
                                base_total = 56, 
                                sub_total = 56, 
                                discount_amount = 56, 
                                discount_rate = 56, 
                                discount_code = '', 
                                order_number = '', 
                                title = '', )
                            ], 
                        document_metadata = openapi_client.models.financial_document_metadata.FinancialDocumentMetadata(
                            document_index = 56, 
                            document_page_number = 56, 
                            document_type = '', ), )
                    ],
                original_response = None,
                status = 'success'
            )
        else:
            return PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232(
                status = 'success',
        )
        """

    def testPydanticMainOcrfinancialParserFinancialParserDataClass94559368347232(self):
        """Test PydanticMainOcrfinancialParserFinancialParserDataClass94559368347232"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
