# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.textchat_response_model import TextchatResponseModel


class TestTextchatResponseModel(unittest.TestCase):
    """TextchatResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TextchatResponseModel:
        """Test TextchatResponseModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TextchatResponseModel`
        """
        model = TextchatResponseModel()
        if include_optional:
            return TextchatResponseModel(
                meta = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                google = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                cohere = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                mistral = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                replicate = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                perplexityai = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                openai = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, ),
                anthropic = openapi_client.models.textchat_chat_data_class.textchatChatDataClass(
                    generated_text = '', 
                    message = [
                        openapi_client.models.chat_message_data_class.ChatMessageDataClass(
                            role = '', 
                            message = '', )
                        ], 
                    original_response = null, 
                    status = null, )
            )
        else:
            return TextchatResponseModel(
        )
        """

    def testTextchatResponseModel(self):
        """Test TextchatResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
