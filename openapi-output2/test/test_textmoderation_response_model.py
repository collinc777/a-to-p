# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.textmoderation_response_model import (
    TextmoderationResponseModel,
)


class TestTextmoderationResponseModel(unittest.TestCase):
    """TextmoderationResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TextmoderationResponseModel:
        """Test TextmoderationResponseModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TextmoderationResponseModel`
        """
        model = TextmoderationResponseModel()
        if include_optional:
            return TextmoderationResponseModel(
                openai = openapi_client.models.textmoderation_moderation_data_class.textmoderationModerationDataClass(
                    nsfw_likelihood = 56, 
                    items = [
                        openapi_client.models.text_moderation_item.TextModerationItem(
                            label = '', 
                            likelihood = 56, 
                            category = 'Toxic', 
                            subcategory = null, 
                            likelihood_score = 56, )
                        ], 
                    nsfw_likelihood_score = 56, 
                    original_response = null, 
                    status = null, ),
                microsoft = openapi_client.models.textmoderation_moderation_data_class.textmoderationModerationDataClass(
                    nsfw_likelihood = 56, 
                    items = [
                        openapi_client.models.text_moderation_item.TextModerationItem(
                            label = '', 
                            likelihood = 56, 
                            category = 'Toxic', 
                            subcategory = null, 
                            likelihood_score = 56, )
                        ], 
                    nsfw_likelihood_score = 56, 
                    original_response = null, 
                    status = null, ),
                clarifai = openapi_client.models.textmoderation_moderation_data_class.textmoderationModerationDataClass(
                    nsfw_likelihood = 56, 
                    items = [
                        openapi_client.models.text_moderation_item.TextModerationItem(
                            label = '', 
                            likelihood = 56, 
                            category = 'Toxic', 
                            subcategory = null, 
                            likelihood_score = 56, )
                        ], 
                    nsfw_likelihood_score = 56, 
                    original_response = null, 
                    status = null, ),
                google = openapi_client.models.textmoderation_moderation_data_class.textmoderationModerationDataClass(
                    nsfw_likelihood = 56, 
                    items = [
                        openapi_client.models.text_moderation_item.TextModerationItem(
                            label = '', 
                            likelihood = 56, 
                            category = 'Toxic', 
                            subcategory = null, 
                            likelihood_score = 56, )
                        ], 
                    nsfw_likelihood_score = 56, 
                    original_response = null, 
                    status = null, )
            )
        else:
            return TextmoderationResponseModel(
        )
        """

    def testTextmoderationResponseModel(self):
        """Test TextmoderationResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
