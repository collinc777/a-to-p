# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.textnamed_entity_recognition_response_model import (
    TextnamedEntityRecognitionResponseModel,
)


class TestTextnamedEntityRecognitionResponseModel(unittest.TestCase):
    """TextnamedEntityRecognitionResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(
        self, include_optional
    ) -> TextnamedEntityRecognitionResponseModel:
        """Test TextnamedEntityRecognitionResponseModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TextnamedEntityRecognitionResponseModel`
        """
        model = TextnamedEntityRecognitionResponseModel()
        if include_optional:
            return TextnamedEntityRecognitionResponseModel(
                tenstorrent = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                microsoft = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                ibm = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                google = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                oneai = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                amazon = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                neuralspace = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                lettria = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                nlpcloud = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                openai = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, ),
                eden_ai = openapi_client.models.textnamed_entity_recognition_named_entity_recognition_data_class.textnamed_entity_recognitionNamedEntityRecognitionDataClass(
                    items = [
                        openapi_client.models.infos_named_entity_recognition_data_class.InfosNamedEntityRecognitionDataClass(
                            entity = '', 
                            category = '', 
                            importance = 56, )
                        ], 
                    original_response = null, 
                    status = null, )
            )
        else:
            return TextnamedEntityRecognitionResponseModel(
        )
        """

    def testTextnamedEntityRecognitionResponseModel(self):
        """Test TextnamedEntityRecognitionResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
