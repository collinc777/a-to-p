# coding: utf-8

"""
Eden AI

Your project description

The version of the OpenAPI document: 2.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openapi_client.models.textquestion_answer_response_model import (
    TextquestionAnswerResponseModel,
)


class TestTextquestionAnswerResponseModel(unittest.TestCase):
    """TextquestionAnswerResponseModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TextquestionAnswerResponseModel:
        """Test TextquestionAnswerResponseModel
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `TextquestionAnswerResponseModel`
        """
        model = TextquestionAnswerResponseModel()
        if include_optional:
            return TextquestionAnswerResponseModel(
                tenstorrent = openapi_client.models.textquestion_answer_question_answer_data_class.textquestion_answerQuestionAnswerDataClass(
                    answers = [
                        ''
                        ], 
                    original_response = null, 
                    status = null, ),
                huggingface = openapi_client.models.textquestion_answer_question_answer_data_class.textquestion_answerQuestionAnswerDataClass(
                    answers = [
                        ''
                        ], 
                    original_response = null, 
                    status = null, ),
                openai = openapi_client.models.textquestion_answer_question_answer_data_class.textquestion_answerQuestionAnswerDataClass(
                    answers = [
                        ''
                        ], 
                    original_response = null, 
                    status = null, ),
                eden_ai = openapi_client.models.textquestion_answer_question_answer_data_class.textquestion_answerQuestionAnswerDataClass(
                    answers = [
                        ''
                        ], 
                    original_response = null, 
                    status = null, )
            )
        else:
            return TextquestionAnswerResponseModel(
        )
        """

    def testTextquestionAnswerResponseModel(self):
        """Test TextquestionAnswerResponseModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
